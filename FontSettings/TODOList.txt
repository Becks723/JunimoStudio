	- √ 解决调节行间距值不能立刻反馈在示例上。
	- √ i18n。
	- √ 修改完字体保存至config。
	- √ 整理项目文件、改mod信息。
	- √ BmFont的示例字体（目前用SpriteFont代替，因为BmFont需要生成文件，太繁琐）
		- 是否可以不用fontbm或bmfont，而直接用stbtruetype，即目前SpriteFont的生成方案，来生成BmFont，这样可以直接加载到内存中，无需文件。
	- √ BmFont的字符文件中特殊字符（如\n）的识别。
	- √ 删除Temp里的文件。
	- √ 三种字体介绍（SmallFont、DialogueFont、SpriteText）在选择字体的箭头上加一个问号，鼠标移上去显示提示框。
	- √ 刷新（重新扫描）字体的功能。
	- √ 异常处理。
	- √ 示例美化一下（如：每个字加边框、合并两个示例）。
	- √ 兼容GMCM。
	- √ 兼容mod语言。
	- √ 优化BmFont制作的字体，现在的感觉被裁剪过。
	- √ 为assets添加assetname，使其可替换。
	- √ 扫描字体的过程记录日志
	- × SpriteFont的文件保存，方便下次加载。
	- × BmFont的Kerning？游戏里用不着。
	- 暂时√ SpriteFont生成的图片太大（指宽高）怎么办？xna自己解决
	- 暂时√ 字体的生成方案：
		- SpriteFont：stbtrutype（当前）
		- BmFont：stbtrutype（当前）、fontbm（备用）、bmfont
    - 部分√ 保持原版字体时能够调节字体大小。（目前常用字符都已完成，剩下一些查漏补缺）


	- 安卓版本
		主要问题：1. 如何读取系统字体？
				 2. 如何安装字体进系统？（或者创一个文件夹特别用于堆字体？）
				 3. 安卓的UI与pc端不一样。
	- 拉丁语言兼容对话字体。
	- UI兼容手柄。
	- 下拉框条目用各自的字体显示。
	- 代码里的TODO。
	- assets/vanilla-fonts扩展：新建一个custom-vanilla-fonts给用户配置。
		1. 添加更多自定义语言。
		2. 重写已存在的配置，用于自定义字体。
	- 将第三方dll归入libs目录。
		目前难点：SMAPI用cecil提前解析依赖，因此无法用AssemblyResolve事件；
				目前只识别与主dll同一目录的依赖（见AssemblyLoader::GetReferencedLocalAssemblies），可能需要写一份PR。

Custom Dialogue font under latin language:
Solution:
Skip related if check withs `LocalizedContentManager.CurrentLanguageLatin` (use transpiler to change the field into a `false`)
`SpriteText.setUpCharacterMap`: latin languages do same things as non-latin do. Initialize bmfont related fields, subscribe the `OnLanguageChange` callback.
`SpriteText.OnLanguageChange`: similar to `setUpCharacterMap`, do the inits.
`SpriteText.drawString`: Replace the only `CurrentLanguageLatin` with `false`.
